2017-07-11 15:10:48.084 -0600	START		Running Untitled.script
2017-07-11 15:10:48.221 -0600	Log		<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>JSONPlaceholder - Fake online REST API for developers</title>\n<meta name="description" content="Fake online REST API for developers">\n<meta name="author" content="Typicode">\n<meta name="viewport" content="width=device-width, initial-scale=1">\n<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css">\n<script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/highlight.min.js"></script>\n<script>hljs.initHighlightingOnLoad();</script>\n<link rel="stylesheet" type="text/css" href="style.css">\n<link href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">\n \n<script src="https://apis.google.com/js/platform.js" async defer></script>\n</head>\n<body>\n<header>\n<h1><img src="http://i.imgur.com/QRlAg0b.png"><br>JSONPlaceholder </h1>\n<p>\nFake Online REST API for Testing and Prototyping<br>\n<small>\npowered by <a href="https://github.com/typicode/json-server">JSON Server</a>\nand <a href="https://github.com/typicode/lowdb">lowdb</a>\n</small>\n</p>\n</header>\n<div class="narrow">\n<div class="center">\n \n<div class="inline">\n<div id="fb-root"></div>\n<script>(function(d, s, id) {\n            var js, fjs = d.getElementsByTagName(s)[0];\n            if (d.getElementById(id)) return;\n            js = d.createElement(s); js.id = id;\n            js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.0";\n            fjs.parentNode.insertBefore(js, fjs);\n          }(document, 'script', 'facebook-jssdk'));</script>\n<div class="fb-like" data-href="http://jsonplaceholder.typicode.com/" data-layout="button_count" data-action="recommend" data-show-faces="false" data-share="false"></div>\n</div>\n<div class="inline">\n<a class="twitter-follow-button" href="https://twitter.com/typicode" data-show-count="false">\nFollow @typicode\n</a>\n</div>\n \n</div>\n<h2>Intro</h2>\n<p>\nJSONPlaceholder is a free online REST service that you can use whenever you need some fake data.\n</p>\n<p>\nIt's great for tutorials, faking a server, sharing code examples, ...\n</p>\n<h2>Example</h2>\n<p>Run this code in a console or from anywhere (CORS and JSONP supported).</p>\n<pre><code id="example" class="javascript">var root = 'http://jsonplaceholder.typicode.com';\n\n$.ajax({\n  url: root + '/posts/1',\n  method: 'GET'\n}).then(function(data) {\n  console.log(data);\n});</code></pre>\n<p>\n<button id="run">Run</button>\n</p>\n<p id="result" class="json">"Try me!"</p>\n<h2>Resources</h2>\n<p>\nInspired by common use cases.\n</p>\n<table>\n<tr><td><a href="/posts">/posts</a></td><td>100 items</td></tr>\n<tr><td><a href="/comments">/comments</a></td><td>500 items</td></tr>\n<tr><td><a href="/albums">/albums</a></td><td>100 items</td></tr>\n<tr><td><a href="/photos">/photos</a></td><td>5000 items</td></tr>\n<tr><td><a href="/todos">/todos</a></td><td>200 items</td></tr>\n<tr><td><a href="/users">/users</a></td><td>10 items</td></tr>\n</table>\n<h2>Routes</h2>\n<p>\nAll HTTP verbs are supported.<br>\nView usage <a href="https://github.com/typicode/jsonplaceholder#how-to">examples</a>.\n</p>\n<table>\n<tr><td class="verb">GET</td><td><a href="/posts">/posts</a></td></tr>\n<tr><td class="verb">GET</td><td><a href="/posts/1">/posts/1</a></td></tr>\n<tr><td class="verb">GET</td><td><a href="/posts/1/comments">/posts/1/comments</a></td></tr>\n<tr><td class="verb">GET</td><td><a href="/comments?postId=1">/comments?postId=1</a></td></tr>\n<tr><td class="verb">GET</td><td><a href="/posts?userId=1">/posts?userId=1</a></td></tr>\n<tr><td class="verb">POST</td><td>/posts</td></tr>\n<tr><td class="verb">PUT</td><td>/posts/1</td></tr>\n<tr><td class="verb">PATCH</td><td>/posts/1</td></tr>\n<tr><td class="verb">DELETE</td><td>/posts/1</td></tr>\n</tr>\n</table>\n<h2>Use your OWN data</h2>\n<p>\n<a href="https://github.com/typicode/json-server">JSON Server</a> powers this website.\nYou can use it to create the same fake API in less than <strong>30 seconds</strong> with your own data.\n</p>\n<pre><code class="bash">npm install -g json-server</code></pre>\n</div>\n<footer>\n<p>\nCoded and built with <i class="fa fa-heart"></i>\nby <a href="https://github.com/typicode">typicode</a>.\nSource code available on\n<a href="https://github.com/typicode/jsonplaceholder">GitHub</a>.\n<a href="https://patreon.com/typicode" onclick="trackOutboundLink('https://patreon.com/typicode')">Patreon page</a>.\n</p>\n</footer>\n \n \n<a href="https://github.com/typicode/react-fake-props" class="more">\n<p>\nReact-fake-props - ⚛️ Generate fake props for your React tests (Jest, Enzyme, ...)\n</p>\n</a>\n<script>\n      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n      ga('create', 'UA-44497010-1', 'typicode.com');\n      ga('send', 'pageview');\n\n      var trackOutboundLink = function(url) {\n        ga('send', 'event', 'outbound', 'click', url, {\n          'transport': 'beacon'\n        });\n      }\n    </script>\n<script>window.twttr = (function(d, s, id) {\n      var js, fjs = d.getElementsByTagName(s)[0],\n        t = window.twttr || {};\n      if (d.getElementById(id)) return t;\n      js = d.createElement(s);\n      js.id = id;\n      js.src = "https://platform.twitter.com/widgets.js";\n      fjs.parentNode.insertBefore(js, fjs);\n\n      t._e = [];\n      t.ready = function(f) {\n        t._e.push(f);\n      };\n\n      return t;\n    }(document, "script", "twitter-wjs"));</script>\n<script src="https://code.jquery.com/jquery-2.1.3.min.js"></script>\n<script>\n      // Use http or https based on location.protocol\n      var exampleText = $('#example').text()\n      $('#example').text(exampleText.replace('http:', location.protocol))\n\n      // Highlight result element\n      $('#result').each(function(i, block) {\n        hljs.highlightBlock(block);\n      });\n\n      // Run example\n      $('#run').click(function() {\n        var root = location.protocol + '//jsonplaceholder.typicode.com';\n        $.ajax({\n          url: root + '/posts/1',\n          method: 'GET'\n        }).then(function(data) {\n          var str = JSON.stringify(data, null, '\t')\n          $('#result').html(\n            str.replace(/\n/g, '<br/>')\n               .replace(/\\n/g, ' ')\n               .replace(/\t/g, '&nbsp;&nbsp;')\n          );\n\n          $('#result').each(function(i, block) {\n            hljs.highlightBlock(block);\n          });\n        });\n      });\n\n      // Tell that jQuery can be used in console\n      console.log('You can use jQuery functions')\n    </script>\n</body>\n</html>\n	5	on_untitled	Untitled.script
2017-07-11 15:10:48.490 -0600	EndTestCase		(Duration:"0.405084", Errors:"0", Exceptions:"0", StartTime:"2017-07-11 15:10:48 -0600", Successes:"1", TestCase:"Untitled.script", Warnings:"0")
2017-07-11 15:10:48.516 -0600	SUCCESS		Execution Time 0:00:00 Untitled.script
